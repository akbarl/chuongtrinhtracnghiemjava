import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.TreeMap;

import javax.swing.JComboBox;

import com.mysql.jdbc.Statement;


public class Database {
	static String url = "jdbc:mysql://localhost:3306/tracnghiem?characterEncoding=utf8";
	static String username = "root";
	static String password = "vertrigo";
	static Connection connection;
	static Statement stmt;
	static ResultSet rs;
	static PreparedStatement pstmt;
	
	public Database()
	{
		try{
			connection = DriverManager.getConnection(url, username, password);
			stmt = (Statement) connection.createStatement();
			
		}catch (SQLException e) {
		    throw new IllegalStateException("Cannot connect the database!", e);
		}
		//return connection;
		
		
	}
	
	public ResultSet select(String sql)
	{
		try {
			rs = stmt.executeQuery(sql);
			connection.close();
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return rs;
	}
	
	public Boolean insertCategory(String sql)
	{
		try {
			pstmt = connection.prepareStatement(sql);
			pstmt.execute();
			//stmt.executeQuery(sql);
			connection.close();
			return true;
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
	public Boolean insertQuestion(String sql)
	{
		try {
			pstmt = connection.prepareStatement(sql);
			pstmt.execute();
			connection.close();
			return true;
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
	public Boolean insertAnswer(String answer, int question_id, Boolean isCorrect)
	{
		String sql1 = "INSERT INTO Answer(name,question_id) VALUES(?,?)";
		String sql2 = "INSERT INTO Question_Answer(question_id,answer_id) VALUES(?,?)";
		try {
			pstmt = connection.prepareStatement(sql1);
			pstmt.setString(1, answer);
			pstmt.setInt(2, question_id);
			pstmt.execute();
			if(isCorrect)
			{
				pstmt = connection.prepareStatement(sql2);
				pstmt.setInt(1, question_id);
				pstmt.setInt(2, getIDofAnswer(answer));
				pstmt.execute();
			}
			connection.close();
			return true;
			
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return false;
	}
	
	public int getIDofQuestion(String q)
	{
		try {
			String sql = "SELECT id from Question WHERE name = '"+q+"'";
			rs = stmt.executeQuery(sql);
			int a = 0;
			while (rs.next()) {
			    a = rs.getInt("id");
			}
			connection.close();
			return a;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}
	
	public int getIDofAnswer(String a)
	{
		try {
			String sql = "SELECT id from Answer WHERE name = '"+a+"'";
			rs = stmt.executeQuery(sql);
			int id = 0;
			while (rs.next()) {
			    id = rs.getInt("id");
			}
			connection.close();
			return id;
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return 0;
	}
	
	public void fillComboxBox(JComboBox cbx, ResultSet rs, TreeMap categoryMap)
	{
		
		try {
			while(rs.next())
			{
				String name = rs.getString("name");
				cbx.addItem(rs.getString("name"));
				categoryMap.put(name, rs.getInt("id"));
			}
			connection.close();
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
	
	

}
